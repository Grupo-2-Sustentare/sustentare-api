name: CI/CD para Spring Boot com Maven e publicação em EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Atualização do código
        uses: actions/checkout@v4

      - name: Desligar avisos de build
        run: echo "CI=false" >> $GITHUB_ENV

      - name: Definindo a versão da JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build com Maven (incluindo dependências)
        run: mvn -f ./sustentaree/pom.xml -X clean install

      - name: Gerar artefato Github com o .jar gerado
        uses: actions/upload-artifact@v4
        with:
          name: sustentare-api  # Nome correto do artefato
          path: sustentaree/target  # Caminho do diretório onde o JAR será gerado

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Recuperar artefatos
        uses: actions/download-artifact@v4
        with:
          name: sustentare-api  # Nome correto do artefato
          path: ./sustentare-api  # Caminho onde o artefato será baixado

      - name: Criar arquivo .pem para acesso à EC2 (Pública)
        run: |
          echo "${{ secrets.PUBLIC_DEPLOY_KEY }}" > /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PUBLICA }}
          chmod 400 /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PUBLICA }}

      - name: Enviar arquivos para a instância pública
        run: |
          scp -i /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PUBLICA }} -o StrictHostKeyChecking=no -r ./sustentare-api/* ubuntu@${{ secrets.PUBLIC_DEPLOY_HOST }}:/home/ubuntu/sustentare-api/

      - name: Transferir arquivos da instância pública para a privada
        run: |
          ssh -i /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PUBLICA }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.PUBLIC_DEPLOY_HOST }} << 'EOF'
            scp -i /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PRIVADA }} -o StrictHostKeyChecking=no -r /home/ubuntu/sustentare-api/* ubuntu@${{ secrets.PRIVATE_EC2_IP }}:/home/ubuntu/sustentare-api/
          EOF

      - name: Conectar à instância privada e reiniciar a aplicação
        run: |
          # Verificando se o arquivo PEM existe
          echo "Verificando se o arquivo PEM existe: /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PRIVADA }}"
          ls -l /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PRIVADA }}

          # Verificando a conexão SSH à EC2
          echo "Testando a conexão SSH com a instância privada..."
          ssh -i /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PRIVADA }} -o StrictHostKeyChecking=no -T ubuntu@${{ secrets.PRIVATE_EC2_IP }} "echo 'Conexão bem-sucedida'"

          # Conectando à instância privada e reiniciando a aplicação
          ssh -i /home/runner/${{ secrets.NOME_ARQUIVO_PEM_PRIVADA }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.PRIVATE_EC2_IP }} << 'EOF'
            cd /home/ubuntu/sustentare-api
            if [ -f "api.pid" ]; then
              echo "Parando aplicação..."
              kill -9 $(cat api.pid) || true
              rm api.pid
            fi
            echo "Iniciando aplicação..."
            nohup java -jar -Dspring.profiles.active=prod sustentare-api-0.0.1-SNAPSHOT-shaded.jar > application.log 2>&1 &
            echo $! > api.pid
          EOF
